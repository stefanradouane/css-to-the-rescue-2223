/************************/
/* Make the cube rotate */
/************************/
article{
    /* Both variables are based on the slider event listeners */
    transform: rotateX(var(--y-deg)) rotateY(var(--x-deg));
}

/***************************/
/* Styling for the sliders */
/***************************/

/* Default styling */
input[type="range"] {
    appearance: none;
    background: linear-gradient(to right, var(--color-blue) 0%, var(--color-blue) 20%, var(--color-orange) 20%, var(--color-orange) 40%, var(--color-green) 40%, var(--color-green) 60%, var(--color-red) 60%, var(--color-red) 80%, var(--color-blue) 80%, var(--color-blue) 100%);
    position: absolute;
    width: calc(var(--object-size) * 3);
}

/* Styling for the vertical slider */
input[type="range"][aria-orientation="vertical"] {
    background: linear-gradient(to right, var(--color-blue) 0%, var(--color-blue) 20%, var(--color-yellow) 20%, var(--color-yellow) 40%, var(--color-green) 40%, var(--color-green) 60%, var(--color-white) 60%, var(--color-white) 80%, var(--color-blue) 80%, var(--color-blue) 100%);
    left: calc(var(--base-offset) * 1.5);
    transform: rotate(-90deg) translateX(-50%);
    transform-origin: left;
    top: 50%;
}

/* Styling for only the horizontal slider */
input[type="range"]:not([aria-orientation="vertical"]) {
    bottom: var(--base-offset);
}

/* Default styling of the slider thumb */
input[type="range"]::-webkit-slider-thumb {
    appearance: none;
    background: var(--control-color);
    display: block;
    box-shadow: inset 0 0.25em 0.125em var(--highlight-dark),
        inset 0 -0.25em 0.125em var(--shadow-light);
    display: block;
    height: calc(var(--object-size) / 4);
    position: relative;
    width: calc(var(--object-size) / 4);
    transition: var(--transition-timing) all;
}
/* Hover the slider thumb */
input[type="range"]::-webkit-slider-thumb:hover {
    background: var(--control-color--hover);
}
/* Active slider thumb */
input[type="range"]::-webkit-slider-thumb:active {
    background: var(--control-color--active);
}

/* Styling for the vertical slider thumb */
input[type="range"][aria-orientation="vertical"]::-webkit-slider-thumb {
    box-shadow: inset -0.25em 0 0.125em var(--highlight-dark),
        inset 0.25em 0 0.125em var(--shadow-light);
}

/*******************/
/* Event Listeners */
/*******************/

/* Vertical y-as */
head[data-vertical-x^="0"]+body {
    --y-deg: -180deg;
}

head[data-vertical-value^="1"]:not([data-vertical-value="1"])+body {
    --y-deg: -144deg;
}

head[data-vertical-value^="2"]:not([data-vertical-value="2"])+body {
    --y-deg: -108deg;
}

head[data-vertical-value^="3"]:not([data-vertical-value="3"])+body {
    --y-deg: -72deg;
}

head[data-vertical-value^="4"]:not([data-vertical-value="4"])+body {
    --y-deg: -36deg;
}

head[data-vertical-value^="5"]:not([data-vertical-value="5"])+body {
    --y-deg: 0deg;
}

head[data-vertical-value^="6"]:not([data-vertical-value="6"])+body {
    --y-deg: 36deg;
}

head[data-vertical-value^="7"]:not([data-vertical-value="7"])+body {
    --y-deg: 72deg;
}

head[data-vertical-value^="8"]:not([data-vertical-value="8"])+body {
    --y-deg: 108deg;
}

head[data-vertical-value^="9"]:not([data-vertical-value="9"])+body {
    --y-deg: 144deg;
}

head[data-vertical-value^="10"]:not([data-vertical-value="10"])+body {
    --y-deg: 180deg;
}

/* Horizontal x-as */
head[data-horizontal-x^="0"]+body {
    --x-deg: calc(36deg * -5);
}

head[data-horizontal-value^="1"]:not([data-horizontal-value="1"])+body {
    --x-deg: calc(36deg * -4);
}

head[data-horizontal-value^="2"]:not([data-horizontal-value="2"])+body {
    --x-deg: calc(36deg * -3);
}

head[data-horizontal-value^="3"]:not([data-horizontal-value="3"])+body {
    --x-deg: calc(36deg * -2);
}

head[data-horizontal-value^="4"]:not([data-horizontal-value="4"])+body {
    --x-deg: calc(36deg * -1);
}

head[data-horizontal-value^="5"]:not([data-horizontal-value="5"])+body {
    --x-deg: calc(36deg * 0);
}

head[data-horizontal-value^="6"]:not([data-horizontal-value="6"])+body {
    --x-deg: calc(36deg * 1);
}

head[data-horizontal-value^="7"]:not([data-horizontal-value="7"])+body {
    --x-deg: calc(36deg * 2);
}

head[data-horizontal-value^="8"]:not([data-horizontal-value="8"])+body {
    --x-deg: calc(36deg * 3);
}

head[data-horizontal-value^="9"]:not([data-horizontal-value="9"])+body {
    --x-deg: calc(36deg * 4);
}

head[data-horizontal-value^="10"]:not([data-horizontal-value="10"])+body {
    --x-deg: calc(36deg * 5);
}