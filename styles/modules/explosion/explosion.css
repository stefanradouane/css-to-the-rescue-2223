

section:has(input[name="special"]) {
    padding: var(--base-offset);
    position: absolute;
    left: 0;
    bottom: 0;
}

section:has(input[name="special"]:checked)+article {
    animation: implosion 1s ease infinite;
}



body:has(input[name="special"]:checked) h1[data-effect="special"] {
    animation: pop-up 1s ease infinite;
    color: white;
    opacity: 1;
    visibility: visible;
}

body:not(body:has(input[name="special"]:checked), body:has(input[data-level]:checked)) h1[data-effect="special"] {
    visibility: hidden;
    opacity: 0;
}

body:has(input[data-level]:checked) h1[data-effect="special"]:before {
    animation: fadeTextOut var(--animation-timing) forwards var(--animation-delay);
    opacity: 1;
}

body:has(input[data-level*="spectator"]:checked) h1[data-effect="special"]:before {
    content: "Spectator mode";
}

h1[data-effect="special"]::before {
    transition: var(--animation-timing) all;
    color: white;
    content: "Building moves";
    opacity: 0;
    width: 100%;
    position: absolute;
    top: 0;
    text-align: center;
}


body:has(input[name="special"]:checked) h1[data-effect="special"]::before {
    animation: none;
    opacity: 0;
}

@keyframes fadeTextOut {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

@keyframes fadeTextOut2 {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

h1[data-effect="special"]:after {
    color: transparent;
    transition: var(--animation-timing) all var(--animation-delay);
    content: "You broke the cube...";
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    text-align: center;
    opacity: 0;
    animation: changeToFix 0ms steps(1) forwards;
}


@keyframes changeToFix {
    0% {
        content: "You broke the cube..";
    }

    100% {
        content: "Fixing the cube";
    }
}

body:has(input[name="special"]:checked) h1[data-effect="special"]:after {
    color: white;
    opacity: 1;
    animation: none;
}

h1[data-effect="special"] span {
    display: inline;
    position: static;
}



h1[data-effect="special"] span:after {
    transition: var(--animation-timing) all;
    content: "s";
    color: transparent;
}

body:has(input[name="special"]:checked) h1[data-effect="special"] span:after {
    animation: changeContent 0s steps(1) forwards 1s;
    color: white;
}

@keyframes changeContent {
    0% {
        content: "s";
    }

    100% {
        content: "ed";
    }
}


@keyframes pop-up {
    0% {
        scale: 1;
    }

    250% {
        scale: 1.2;
    }

    50% {
        scale: 1;
    }

    75% {
        scale: 1.5;
    }

    100% {
        scale: 1;
    }
}

@keyframes implosion {
    0% {
        transform: rotateX(calc(var(--x-deg) + 10deg - calc(var(--x-deg) / 10))) rotateY(calc(var(--y-deg) + 10deg - calc(var(--y-deg) / 10)));
    }

    8% {
        transform: rotateX(calc(var(--x-deg) + 15deg - calc(var(--x-deg) / 2))) rotateY(calc(var(--y-deg) + 11deg - calc(var(--y-deg) / 1)));
    }

    16% {
        transform: rotateX(calc(var(--x-deg) + 5deg - calc(var(--x-deg) / 1))) rotateY(calc(var(--y-deg) + 19deg - calc(var(--y-deg) / 9)));
    }

    24% {
        transform: rotateX(calc(var(--x-deg) + 1deg - calc(var(--x-deg) / 2))) rotateY(calc(var(--y-deg) + 5deg - calc(var(--y-deg) / 1)));
    }

    32% {
        transform: rotateX(calc(var(--x-deg) + 9deg - calc(var(--x-deg) / 9))) rotateY(calc(var(--y-deg) + 14deg - calc(var(--y-deg) / 30)));
    }

    40% {
        transform: rotateX(calc(var(--x-deg) + 19deg - calc(var(--x-deg) / 2))) rotateY(calc(var(--y-deg) + 12deg - calc(var(--y-deg) / 10)));
    }

    48% {
        transform: rotateX(calc(var(--x-deg) + 14deg - calc(var(--x-deg) / 3))) rotateY(calc(var(--y-deg) + 5deg - calc(var(--y-deg) / 2)));
    }

    56% {
        transform: rotateX(calc(var(--x-deg) + 11deg - calc(var(--x-deg) / 30))) rotateY(calc(var(--y-deg) + 16deg - calc(var(--y-deg) / 13)));
    }

    60% {
        transform: rotateX(calc(var(--x-deg) + 6deg - calc(var(--x-deg) / 1))) rotateY(calc(var(--y-deg) + 3deg - calc(var(--y-deg) / 1)));
    }

    64% {
        transform: rotateX(calc(var(--x-deg) + 3deg - calc(var(--x-deg) / 20))) rotateY(calc(var(--y-deg) + 5deg - calc(var(--y-deg) / 12)));
    }

    72% {
        transform: rotateX(calc(var(--x-deg) + 11deg - calc(var(--x-deg) / 1))) rotateY(calc(var(--y-deg) + 3deg - calc(var(--y-deg) / 20)));
    }

    80% {
        transform: rotateX(calc(var(--x-deg) + 12deg - calc(var(--x-deg) / 2))) rotateY(calc(var(--y-deg) + 20deg - calc(var(--y-deg) / 10)));
    }

    88% {
        transform: rotateX(calc(var(--x-deg) + 5deg - calc(var(--x-deg) / 30))) rotateY(calc(var(--y-deg) + 11deg - calc(var(--y-deg) / 13)));
    }

    94% {
        transform: rotateX(calc(var(--x-deg) + 20deg - calc(var(--x-deg) / 1))) rotateY(calc(var(--y-deg) + 13deg - calc(var(--y-deg) / 1)));
    }

    100% {
        transform: rotateX(calc(var(--x-deg) + 14deg - calc(var(--x-deg) / 20))) rotateY(calc(var(--y-deg) + 12deg - calc(var(--y-deg) / 12)));
    }
}



/* Styling for the impossible cube */
/* MESS UP THE CUBE :) */

body:not(input[name="special"]:checked) article>span {
    transition: 200ms all var(--animation-delay);
}

body:has(input[name="special"]:checked) article>span:nth-child(1n) {
    transform: rotateX(calc(var(--move-deg) * .5)) rotateY(calc(var(--move-deg) * 1.3));
    padding-top: 1em;
}

body:has(input[name="special"]:checked) article>span:nth-child(2n) {
    transform: rotateX(calc(var(--move-deg) * -.3)) rotateY(calc(var(--move-deg) * -1.4));
    padding-top: 2em;
}

body:has(input[name="special"]:checked) article>span:nth-child(3n) {
    transform: rotateX(calc(var(--move-deg) * -1.5)) rotateY(calc(var(--move-deg) * -.4));
    padding-top: 2.5em;
}

body:has(input[name="special"]:checked) article>span:nth-child(5n) {
    transform: rotateX(calc(var(--move-deg) * 1.6)) rotateY(calc(var(--move-deg) * 1.7));
    padding-top: 1.5em;
}

body:has(input[name="special"]:checked) article>span:nth-child(7n) {
    transform: rotateX(calc(var(--move-deg) * 1.7)) rotateY(calc(var(--move-deg) * -1.2));
    padding-top: 2.1em;
}

body:has(input[name="special"]:checked) article>span:nth-child(9n) {
    transform: rotateX(calc(var(--move-deg) * 1.67)) rotateY(calc(var(--move-deg) * 3.2));
    padding-top: 1.4em;
}

body:has(input[name="special"]:checked) article>span:nth-child(11n) {
    transform: rotateX(calc(var(--move-deg) * 2.66)) rotateY(calc(var(--move-deg) * 1.3));
    padding-top: 2.9em;
}