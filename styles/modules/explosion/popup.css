/**********/
/* Pop-up */
/**********/
/*-------------------------------------------------------------------*/
/* The pop-up is used to give feedback about the 'state' of the cube */
/*-------------------------------------------------------------------*/

/* Default styling of the hidden h1 */
/* Only the before is shown on load */
h1[data-effect="special"] {
    color: transparent;
    isolation: isolate;
    transition: var(--animation-timing) all 0s;
    position: absolute;
    pointer-events: none;
    z-index: 1;
}

/* Once the big-red-button is pressed show the text */
body:has(input[name="special"]:checked) h1[data-effect="special"] {
    animation: pulse calc(var(--animation-timing) * 1.5) ease infinite;
    color: white !important;
    opacity: 1;
    visibility: visible;
}

@keyframes pulse {
    0% { scale: 1; }

    50% { scale: 1.5; }

    100% { scale: 1; }
}


/* Default styling of the h1:before */
h1[data-effect="special"]::before {
    transition: var(--animation-timing) all;
    color: white;
    content: "Building moves";
    opacity: 0;
    width: 100%;
    position: absolute;
    top: 0;
    text-align: center;
}

/* Before show on load, then disappear */
body:has(input[data-level]:checked) h1[data-effect="special"]:before {
    animation: fadeTextOut var(--animation-timing) forwards var(--animation-delay);
    opacity: 1;
}
@keyframes fadeTextOut {
    0% { opacity: 1; }

    100% { opacity: 0;}
}

/* When the game is in spectator mode */
body:has(input[data-level*="spectator"]:checked) h1[data-effect="special"]:before {
    content: "Spectator mode";
}

/* Disappear when big-red-button is checked */
body:has(input[name="special"]:checked) h1[data-effect="special"]::before {
    animation: none;
    opacity: 0;
}

/* Default styling of the h1:after */
h1[data-effect="special"]:after {
    color: transparent;
    transition: var(--animation-timing) all var(--animation-delay);
    content: "You broke the cube...";
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    text-align: center;
    opacity: 0;
    animation: changeToFix 0ms steps(1) forwards;
}
@keyframes changeToFix {
    0% { content: "You broke the cube.."; }

    100% { content: "Fixing the cube"; }
}

/* Appear when big-red-button is checked */
body:has(input[name="special"]:checked) h1[data-effect="special"]:after {
    color: white;
    opacity: 1;
    animation: none;
}

/* The span is used only to change the 's' into 'ed' */
/* Changes the word 'overheats' into 'overheated'    */
h1[data-effect="special"] span {
    display: inline;
    position: static;
}

h1[data-effect="special"] span:after {
    transition: var(--animation-timing) all;
    content: "s";
    color: transparent;
}

body:has(input[name="special"]:checked) h1[data-effect="special"] span:after {
    animation: changeStoEd 0s steps(1) forwards 1s;
    color: white;
}

@keyframes changeStoEd {
    0% {
        content: "s";
    }

    100% {
        content: "ed";
    }
}